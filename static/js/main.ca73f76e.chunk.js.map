{"version":3,"sources":["processor/data.ts","processor/processor.ts","dr-strange-thinking.jpeg","dr-strange-talking.jpeg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ASS_INTERFERENCE","teams","teamName","wins","losses","pointsFor","week13Matchups","teamName1","teamName2","playoffTeams","forEach","t","Math","round","OKTA_AFL","sortTeams","team1","team2","produceAllOutcomes","league","undeterminedMatchupIndex","findIndex","matchup","undefined","team1Won","json","JSON","stringify","branch1League","parse","branch1Team1","find","team","branch1Team2","sort","branch1Outcomes","branch2League","branch2Team1","branch2Team2","branch2Outcomes","concat","clinchedPlayoffs","teamIndex","Error","cutoffTopTeam","cutoffBotTeam","filter","map","pointDiff","App","useState","selectedDataIndex","setSelectedDataIndex","allOutcomes","setAllOutcomes","outcomes","setOutcomes","outcomeIndex","setOutcomeIndex","lockedWins","setLockedWins","selectedTeamName","setSelectedTeamName","setTeamWin","matchupIndex","existingIndex","l","splice","push","useEffect","o","outcome","every","style","maxWidth","margin","src","drStrangeThinking","alt","value","onChange","e","Number","target","index","onClick","background","length","playoffEligible","v","drStrangeTalking","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca73f76e.chunk.js","sourcesContent":["import { LeagueData } from \"./processor\";\n\nexport const ASS_INTERFERENCE: LeagueData = {\n  teams: [\n    {\n      teamName: \"Spongebobthemusical\",\n      wins: 8,\n      losses: 4,\n      pointsFor: 1190.80 + 112.55\n    },\n    {\n      teamName: \"The Chosen One™\",\n      wins: 8,\n      losses: 4,\n      pointsFor: 1459.05 + 156.90\n    },\n    {\n      teamName: \"❄️☃️❄️\",\n      wins: 8,\n      losses: 4,\n      pointsFor: 1267.85 + 119.85\n    },\n    {\n      teamName: \"Please no covid\",\n      wins: 8,\n      losses: 4,\n      pointsFor: 1186.70 + 156.15\n    },\n    {\n      teamName: \"3D Glasses\",\n      wins: 6,\n      losses: 6,\n      pointsFor: 1225.35 + 89.05\n    },\n    {\n      teamName: \"Tom Brady's Left Nut\",\n      wins: 6,\n      losses: 6,\n      pointsFor: 1194.80 + 94.40\n    },\n    {\n      teamName: \"McCafé\",\n      wins: 5,\n      losses: 7,\n      pointsFor: 1246.80 + 93.00\n    },\n    {\n      teamName: \"The LV Raiders\",\n      wins: 5,\n      losses: 7,\n      pointsFor: 1194.80 + 117.00\n    },\n    {\n      teamName: \"ms. steelersyourman\",\n      wins: 5,\n      losses: 7,\n      pointsFor: 1219.45 + 97.65\n    },\n    {\n      teamName: \"Saquon Barkley's ACL\",\n      wins: 5,\n      losses: 7,\n      pointsFor: 1052.40 + 97.35\n    },\n    {\n      teamName: \"Qhazz Q. Qichaels\",\n      wins: 5,\n      losses: 7,\n      pointsFor: 1018.10 + 130.10\n    },\n    {\n      teamName: \"Sidney with a Knife\",\n      wins: 3,\n      losses: 8,\n      pointsFor: 1145.00 + 64.60\n    }\n  ],\n  week13Matchups: [\n    {\n      teamName1: \"Qhazz Q. Qichaels\",\n      teamName2: \"Spongebobthemusical\"\n    },\n    {\n      teamName1: \"The Chosen One™\",\n      teamName2: \"McCafé\"\n    },\n    {\n      teamName1: \"❄️☃️❄️\",\n      teamName2: \"Sidney with a Knife\"\n    },\n    {\n      teamName1: \"ms. steelersyourman\",\n      teamName2: \"Saquon Barkley's ACL\"\n    },\n    {\n      teamName1: \"The LV Raiders\",\n      teamName2: \"3D Glasses\"\n    },\n    {\n      teamName1: \"Tom Brady's Left Nut\",\n      teamName2: \"Please no covid\"\n    }\n  ],\n  playoffTeams: 8\n};\n\nASS_INTERFERENCE.teams.forEach((t) => {\n  t.pointsFor = Math.round(t.pointsFor * 100) / 100;\n});\n\nexport const OKTA_AFL: LeagueData = {\n  teams: [\n    {\n      teamName: \"W's@Okta\",\n      wins: 11,\n      losses: 1,\n      pointsFor: 1296.54\n    },\n    {\n      teamName: \"Sea Titans\",\n      wins: 9,\n      losses: 3,\n      pointsFor: 1307.30\n    },\n    {\n      teamName: \"Ryan's Meme Team\",\n      wins: 7,\n      losses: 5,\n      pointsFor: 1380.86\n    },\n    {\n      teamName: \"Losers@Okta\",\n      wins: 7,\n      losses: 5,\n      pointsFor: 1321.08\n    },\n    {\n      teamName: \"Ryan's Team\",\n      wins: 7,\n      losses: 5,\n      pointsFor: 1303.44\n    },\n    {\n      teamName: \"Chris's Crazy Team\",\n      wins: 7,\n      losses: 5,\n      pointsFor: 1252.08\n    },\n    {\n      teamName: \"SF Football Team\",\n      wins: 7,\n      losses: 5,\n      pointsFor: 1251.28\n    },\n    {\n      teamName: \"Backstreet's Back\",\n      wins: 7,\n      losses: 5,\n      pointsFor: 1229.78\n    },\n    {\n      teamName: \"Unsportsmanlike\",\n      wins: 6,\n      losses: 6,\n      pointsFor: 1158.92\n    },\n    {\n      teamName: \"Game of Jones\",\n      wins: 5,\n      losses: 7,\n      pointsFor: 1256.68\n    },\n    {\n      teamName: \"Great White NorthIAN\",\n      wins: 4,\n      losses: 8,\n      pointsFor: 1131.86\n    },\n    {\n      teamName: \"Rockers\",\n      wins: 3,\n      losses: 9,\n      pointsFor: 1064.04\n    },\n    {\n      teamName: \"Qichael Qichaels\",\n      wins: 2,\n      losses: 10,\n      pointsFor: 1153.52\n    },\n    {\n      teamName: \"Bill's Mafia\",\n      wins: 2,\n      losses: 10,\n      pointsFor: 946.28\n    }\n  ],\n  week13Matchups: [\n    {\n      teamName1: \"Qichael Qichaels\",\n      teamName2: \"Sea Titans\"\n    },\n    {\n      teamName1: \"Losers@Okta\",\n      teamName2: \"Great White NorthIAN\"\n    },\n    {\n      teamName1: \"Ryan's Meme Team\",\n      teamName2: \"Bill's Mafia\"\n    },\n    {\n      teamName1: \"Backstreet's Back\",\n      teamName2: \"SF Football Team\"\n    },\n    {\n      teamName1: \"W's@Okta\",\n      teamName2: \"Chris's Crazy Team\"\n    },\n    {\n      teamName1: \"Ryan's Team\",\n      teamName2: \"Rockers\"\n    },\n    {\n      teamName1: \"Unsportsmanlike\",\n      teamName2: \"Game of Jones\"\n    }\n  ],\n  playoffTeams: 6\n};\n","export interface TeamData {\n  teamName: string;\n  wins: number;\n  losses: number;\n  pointsFor: number;\n}\n\nexport interface WeekMatchups {\n  teamName1: string;\n  teamName2: string;\n  team1Won?: boolean | null;\n}\n\nexport interface LeagueData {\n  teams: TeamData[];\n  week13Matchups: WeekMatchups[];\n  playoffTeams: number;\n}\n\nexport function sortTeams(team1: TeamData, team2: TeamData) {\n  if (team1.wins === team2.wins) {\n    return team2.pointsFor - team1.pointsFor;\n  } else {\n    return team2.wins - team1.wins;\n  }\n};\n\nexport function produceAllOutcomes(league: LeagueData): LeagueData[] {\n  const undeterminedMatchupIndex = league.week13Matchups.findIndex((matchup) => matchup.team1Won === undefined);\n  \n  // Base case\n  if (undeterminedMatchupIndex === -1) {\n    return [league];\n  }\n\n  // Create branches\n  const matchup = league.week13Matchups[undeterminedMatchupIndex];\n  const json = JSON.stringify(league);\n\n  const branch1League: LeagueData = JSON.parse(json);\n  branch1League.week13Matchups[undeterminedMatchupIndex].team1Won = true;\n  const branch1Team1 = branch1League.teams.find((team) => team.teamName === matchup.teamName1) as TeamData;\n  const branch1Team2 = branch1League.teams.find((team) => team.teamName === matchup.teamName2) as TeamData;\n  branch1Team1.wins += 1;\n  branch1Team2.losses += 1;\n  branch1League.teams.sort(sortTeams);\n  const branch1Outcomes = produceAllOutcomes(branch1League);\n\n  const branch2League: LeagueData = JSON.parse(json);\n  branch2League.week13Matchups[undeterminedMatchupIndex].team1Won = false;\n  const branch2Team1 = branch2League.teams.find((team) => team.teamName === matchup.teamName1) as TeamData;\n  const branch2Team2 = branch2League.teams.find((team) => team.teamName === matchup.teamName2) as TeamData;\n  branch2Team1.losses += 1;\n  branch2Team2.wins += 1;\n  branch2League.teams.sort(sortTeams);\n  const branch2Outcomes = produceAllOutcomes(branch2League);\n\n  return branch1Outcomes.concat(branch2Outcomes);\n};\n\nexport function clinchedPlayoffs(league: LeagueData, teamName: string): boolean | { teamName: string; pointDiff: number; }[] {\n  const teamIndex = league.teams.findIndex((t) => t.teamName === teamName);\n\n  if (teamIndex === -1) {\n    debugger;\n    throw new Error(\"whaaa???\")\n  }\n\n  const team = league.teams[teamIndex];\n  const cutoffTopTeam = league.teams[league.playoffTeams - 1];\n  const cutoffBotTeam = league.teams[league.playoffTeams];\n\n  // If the wins are the same as the teams on the playoff cutoff, then calculate the point differential\n  if (team.wins === cutoffTopTeam.wins && cutoffTopTeam.wins === cutoffBotTeam.wins) {\n    const cutoffTeams = league.teams.filter((t) => t.wins === team.wins && t !== team);\n    return cutoffTeams.map((t) => {\n      return {\n        teamName: t.teamName,\n        pointDiff: Math.round((team.pointsFor - t.pointsFor) * 100) / 100\n      };\n    });\n  } else {\n    return teamIndex < league.playoffTeams;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/dr-strange-thinking.21fec87a.jpeg\";","export default __webpack_public_path__ + \"static/media/dr-strange-talking.419c1dfe.jpeg\";","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { ASS_INTERFERENCE, OKTA_AFL } from './processor/data';\nimport { clinchedPlayoffs, LeagueData, produceAllOutcomes } from './processor/processor';\nimport drStrangeThinking from './dr-strange-thinking.jpeg';\nimport drStrangeTalking from './dr-strange-talking.jpeg';\n\nfunction App() {\n  const [selectedDataIndex, setSelectedDataIndex] = useState<number>(0);\n  const [allOutcomes, setAllOutcomes] = useState<LeagueData[]>();\n  const [outcomes, setOutcomes] = useState<LeagueData[]>();\n  const [outcomeIndex, setOutcomeIndex] = useState<number>(0);\n  const [lockedWins, setLockedWins] = useState<{ matchupIndex: number, team1Won: boolean; }[]>([]);\n  const [selectedTeamName, setSelectedTeamName] = useState<string>();\n\n  useEffect(() => {\n    const o = selectedDataIndex === 0 ? produceAllOutcomes(ASS_INTERFERENCE) : produceAllOutcomes(OKTA_AFL);\n    setAllOutcomes(o);\n    setOutcomes(o);\n    setOutcomeIndex(0);\n    setLockedWins([]);\n    setSelectedTeamName(o[0].teams[0].teamName);\n  }, [selectedDataIndex]);\n\n  useEffect(() => {\n    if (!allOutcomes) { return; }\n    setOutcomes(allOutcomes.filter((outcome) => {\n      return lockedWins.every((l) => outcome.week13Matchups[l.matchupIndex].team1Won === l.team1Won)\n    }))\n    setOutcomeIndex(0);\n  }, [allOutcomes, lockedWins]);\n\n  function setTeamWin(matchupIndex: number, team1Won: boolean) {\n    const existingIndex = lockedWins.findIndex((l) => l.matchupIndex === matchupIndex);\n    if (existingIndex !== -1) {\n      const removedWins = lockedWins.splice(existingIndex, 1);\n      // Do not add a new locked win if team1Won is the same\n      if (removedWins[0].team1Won === team1Won) {\n        setLockedWins(lockedWins.splice(0));\n        return;\n      }\n    }\n    lockedWins.push({ matchupIndex, team1Won });\n    setLockedWins(lockedWins.splice(0));\n  }\n\n  if (!outcomes || !selectedTeamName) {\n    return <h1>Loading...</h1>;\n  }\n\n  return (\n    <div style={{ maxWidth: \"800px\", margin: \"auto\" }}>\n      <img style={{ maxWidth: \"500px\" }} src={drStrangeThinking} alt=\"Doctor Strange Thinking\" />\n      <div>\n        <select value={selectedDataIndex} onChange={(e) => { setSelectedDataIndex(Number(e.target.value)) }}>\n          <option value=\"0\">Interference</option>\n          <option value=\"1\">OKTA - AFL</option>\n        </select>\n      </div>\n      <h2>Week 13 Matchups</h2>\n      <p>Click on a team to lock a win for the matchup</p>\n      <table>\n        <thead>\n          <tr>\n            <th>Team 1</th>\n            <th>vs.</th>\n            <th>Team 2</th>\n          </tr>\n        </thead>\n        <tbody>\n          { outcomes[outcomeIndex].week13Matchups.map(function (matchup, index) {\n              return <tr>\n                <td onClick={() => setTeamWin(index, true)}>{matchup.teamName1}</td>\n                <td style={{ background: lockedWins.find((l) => index === l.matchupIndex) && \"green\" }}>{matchup.team1Won ? \"<-\" : \"->\"}</td>\n                <td onClick={() => setTeamWin(index, false)}>{matchup.teamName2}</td>\n              </tr>\n            })\n          }\n        </tbody>\n      </table>\n      <p>Outcome {outcomeIndex + 1} out of {outcomes.length}</p>\n      <div>\n        <button onClick={() => outcomeIndex + 1 < outcomes.length && setOutcomeIndex(outcomeIndex + 1)}>+</button>\n        <button onClick={() => outcomeIndex - 1 >= 0 && setOutcomeIndex(outcomeIndex - 1)}>-</button>\n      </div>\n\n      <h2>Teams</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Team</th>\n            <th>Wins</th>\n            <th>Losses</th>\n            <th>Points For</th>\n            <th>Point differentials to get playoffs</th>\n          </tr>\n        </thead>\n        <tbody>\n          { outcomes[outcomeIndex].teams.map(function (team, index) {\n              const playoffEligible = clinchedPlayoffs(outcomes[outcomeIndex], team.teamName);\n              return <tr style={{ background: playoffEligible === true ? \"green\" : playoffEligible === false ? \"red\" : undefined }}>\n                <td>{index + 1}</td>\n                <td>{team.teamName}</td>\n                <td>{team.wins}</td>\n                <td>{team.losses}</td>\n                <td>{team.pointsFor}</td>\n                <td>{playoffEligible !== true && playoffEligible !== false && playoffEligible.map((v) => <p>{v.pointDiff < 0 ? `Beat ${v.teamName} by ${-v.pointDiff} pts` : `${v.teamName} must beat you by ${v.pointDiff} pts`}</p>)}</td>\n              </tr>\n            })\n          }\n        </tbody>\n      </table>\n\n      <h2>Given a team, how many outcomes lead to playoffs?</h2>\n      <select value={selectedTeamName} onChange={(e) => { setSelectedTeamName(e.target.value) }}>\n        { outcomes[outcomeIndex].teams.map((team, index) => <option value={team.teamName}>{team.teamName}</option>)}\n      </select>\n      <p>Out of {outcomes.length} outcomes...</p>\n      <p>You are guaranteed playoffs in {outcomes.filter((o) => clinchedPlayoffs(o, selectedTeamName) === true).length} outcomes</p>\n      <p>You are on the edge of playoffs in {outcomes.filter((o) => typeof clinchedPlayoffs(o, selectedTeamName) === \"object\").length} outcomes</p>\n      <p>You are eliminated from playoffs in {outcomes.filter((o) => clinchedPlayoffs(o, selectedTeamName) === false).length} outcomes</p>\n      <img style={{ maxWidth: \"500px\" }} src={drStrangeTalking} alt=\"Doctor Strange Thinking\" />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}